class Game
				types
				-- TODO Define types here
				values
				-- TODO Define values here
				
        instance variables
        private moves : nat := 10;
        public codeMaker: CodeMakerPlayer := new CodeMakerPlayer();      
                
        operations
        -- TODO Define operations here
        -- constructor, initializes the game
				public Game: (CodeMakerPlayer) ==> Game
					Game(codeMakerPlayer) == (
						codeMaker := codeMakerPlayer;
						return self
					);
					
				-- get the current number of moves remaining
				pure public GetCurrentMoves : () ==> nat
					GetCurrentMoves () == return moves;
				
				-- get the code maker final key
				public GetFinalKey : () ==> seq of int
					GetFinalKey () == return codeMaker.GetFinalKey();
					
        functions
				-- TODO Define functiones here
				traces
				-- TODO Define Combinatorial Test Traces here
end Game